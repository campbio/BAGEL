% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/discovery_prediction.R
\name{auto_predict_grid}
\alias{auto_predict_grid}
\title{Automatic filtering of signatures for exposure prediction gridded across
specific annotation}
\usage{
auto_predict_grid(
  bagel,
  table_name,
  signature_res,
  algorithm,
  sample_annotation = NULL,
  min_exists = 0.05,
  proportion_samples = 0.25,
  rare_exposure = 0.4,
  verbose = TRUE,
  combine_res = TRUE,
  seed = 1
)
}
\arguments{
\item{bagel}{Input samples to predit signature weights}

\item{table_name}{Name of table used for posterior prediction (e.g. SNV96)}

\item{signature_res}{Signatures to automatically subset from for prediction}

\item{algorithm}{Algorithm to use for prediction. Choose from
"lda_posterior", decompTumor2Sig, and deconstructSigs}

\item{sample_annotation}{Annotation to grid across, if none given,
prediction subsetting on all samples together}

\item{min_exists}{Threshold to consider a signature active in a sample}

\item{proportion_samples}{Threshold of samples to consider a signature
active in the cohort}

\item{rare_exposure}{A sample will be considered active in the cohort if at
least one sample has more than this threshold proportion}

\item{verbose}{Print current annotation value being predicted on}

\item{combine_res}{Automatically combines a list of annotation results
into a single result object with zero exposure values for signatures not
found in a given annotation's set of samples}

\item{seed}{Seed to use for reproducible results, set to null to disable}
}
\value{
Results a list of results, one per unique annotation value, if no
annotation value is given, returns a single result for all samples, or
combines into a single result if combines_res = TRUE
}
\description{
Automatic filtering of signatures for exposure prediction gridded across
specific annotation
}
\examples{
bay <- readRDS(system.file("testdata", "bagel_annot.rds", package = "BAGEL"))
auto_predict_grid(bay, "SNV96", BAGEL::cosmic_v2_sigs, "lda",
"Tumor_Subtypes")

auto_predict_grid(bay, "SNV96", BAGEL::cosmic_v2_sigs, "lda")
}
